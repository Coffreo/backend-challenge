services:
  capital-worker:
    build:
      context: .
      dockerfile: modules/capital-worker/Dockerfile
      target: worker_dev
    container_name: capital_worker
    depends_on:
      - rabbitmq
    env_file:
      - path: ./.env.dev
        required: true
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/capital-worker:/app/modules/worker
      - ./packages:/app/packages

  country-worker:
    build:
      context: .
      dockerfile: modules/country-worker/Dockerfile
      target: worker_dev
    container_name: country_worker
    depends_on:
      - rabbitmq
    env_file:
      - path: ./.env.dev
        required: true
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/country-worker:/app/modules/worker
      - ./packages:/app/packages

  input-worker:
    build:
      context: .
      dockerfile: modules/input-worker/Dockerfile
      target: worker_dev
    container_name: input_worker
    depends_on:
      - rabbitmq
    env_file:
      - path: ./.env.dev
        required: true
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/input-worker:/app/modules/worker
      - ./packages:/app/packages

  weather-worker:
    build:
      context: .
      dockerfile: modules/weather-worker/Dockerfile
      target: worker_dev
    container_name: weather_worker
    depends_on:
      - rabbitmq
      - api-weather
    env_file:
      - path: ./.env.dev
        required: true
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/weather-worker:/app/modules/worker
      - ./packages:/app/packages

  output-worker:
    build:
      context: .
      dockerfile: modules/output-worker/Dockerfile
      target: worker_dev
    container_name: output_worker
    depends_on:
      - rabbitmq
    env_file:
      - path: ./.env.dev
        required: true
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/output-worker:/app/modules/worker
      - ./packages:/app/packages

  api-weather:
    build:
      context: .
      dockerfile: modules/api-weather/Dockerfile
      target: api_dev
    container_name: api_weather
    ports:
      - '8080:80'
    restart: unless-stopped
    stop_grace_period: 2s
    volumes:
      - ./modules/api-weather:/app

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    ports:
      - 9999:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
